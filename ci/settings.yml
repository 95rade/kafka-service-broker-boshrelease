---
meta:
  name:    kafka-service-broker
  # fly -t ohio-cf login -c https://ci2.starkandwayne.com -n cfcommunity
  target:  ohio-cf
  url:     https://ci2.starkandwayne.com

  test-errands: sanity-test

  git:
    email:  ((git-commit-email))
    name:   ((git-commit-name))

  aws:
    bucket: (( grab meta.pipeline ))
    access_key: ((aws-cfcommunity-access))
    secret_key: ((aws-cfcommunity-secret))

  github:
    branch: master
    owner: cloudfoundry-community
    repo: kafka-service-broker-boshrelease
    private_key:  ((github-private-key))
    access_token: ((github-access-token))

  bosh-lite:
    target:   ((bosh-lite-environment))
    cacert:   ((bosh-lite-ca-cert))
    username: ((bosh-lite-client))
    password: ((bosh-lite-client-secret))
    cf:
      system_domain: ((bosh-lite-cf-system-domain))
      api_url:  https://api.((bosh-lite-cf-system-domain))
      username: ((bosh-lite-cf-admin-username))
      password: ((bosh-lite-cf-admin-password))
      skip_ssl_validation: false

  manifest:
    vars: (( concat
      "\ncf-route=kafka-sb-testflight." meta.bosh-lite.cf.system_domain
      "\ncf-api-url="             meta.bosh-lite.cf.api_url
      "\ncf-admin-username="      meta.bosh-lite.cf.username
      "\ncf-admin-password="      meta.bosh-lite.cf.password
      "\ncf-skip-ssl-validation=" meta.bosh-lite.cf.skip_ssl_validation ))

  slack:
    webhook:  ((slack-webhook))
    icon:     ((slack-logo))
    username: ((slack-username))
    channel: '#bigdata-boshrelease'
    release_success:  "$BUILD_PIPELINE_NAME: New version of $BUILD_JOB_NAME was detected, and updated base manifests in master branch."

groups:
- name: releases
  jobs:
  - kafka-boshrelease

jobs:
- name: kafka-boshrelease
  public: true
  plan:
  - aggregate:
    - { get: git }
    - { get: kafka-boshrelease, trigger: true, params: { tarball: false }}
  - task: bump-version
    config:
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.image.name ))
          tag:        (( grab meta.image.tag ))
      platform: linux
      inputs:
      - name: git
      - name: kafka-boshrelease
      outputs:
      - name: pushme
      run:
        path: ./git/ci/scripts/bump-release
      params:
        REPO_ROOT: git
        REPO_OUT:  pushme
        RELEASE:   kafka-boshrelease
        NAME:      kafka
        GIT_EMAIL: (( grab meta.git.email ))
        GIT_NAME:  (( grab meta.git.name ))
  - name: upload-git
    put: git
    params:
      rebase: true
      repository: pushme
    on_success:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:     (( grab meta.slack.release_success ))

resources:
  - name: kafka-boshrelease
    type: github-release
    source:
      access_token: (( grab meta.github.access_token ))
      user: cloudfoundry-community
      repository: kafka-boshrelease
      check_every: 30m
